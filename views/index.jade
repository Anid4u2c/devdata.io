extends layout/main

block content
  h2 The Data You Need, In the Language You Need

  .col-sm-3
    .list-group.dataset-selection
      a.list-group-item(href="#" data-dataset="states") U.S. States
      a.list-group-item(href="#" data-dataset="countries") World Countries
      a.list-group-item(href="#" data-dataset="currencies") World Currencies

  .col-sm-9
    .panel.panel-default
      .panel-body
        .btn-group.dataset-lang(data-toggle='buttons')
          each lang in languages
            label.btn.btn-default.active(class='#{lang}')
              input.lang-tab(type='radio', name='lang', autocomplete='off', checked='' value='#{lang}')
              = lang
        .dataset-result
          .message
            br
          .highlight
            pre
              code.code
                | 1. Select the data set you need to the left
                | 2. Select the programming language you need it in above
                | 3. Copypasta and enjoy!

block append js
  // Maybe should move this to external JS, but it's an SPA for now, so this is actually most efficient...
  script.
    function isMobile() {
      return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)
    }

    function SelectText(element) {
      var doc = document
        , range, selection;

      if (doc.body.createTextRange) {
        range = document.body.createTextRange();
        range.moveToElementText(element);
        range.select();
      } else if (window.getSelection) {
        selection = window.getSelection();
        range = document.createRange();
        range.selectNodeContents(element);
        selection.removeAllRanges();
        selection.addRange(range);
      }
    }

    // Language to request code for
    var userLang = 'json';
    var userDataset = 'states';

    // Dataset results
    var resultEl = $('.dataset-result');

    // Choose dataset
    $('.dataset-selection a').click(function(event) {
      event.preventDefault();

      var el = $(this);
      fetchDataset(el.data('dataset'), userLang);
    });

    // Choose Language
    $('.dataset-lang input[name=lang]:radio').change(function(event) {
      var el = $(this);
      fetchDataset(userDataset, el.val());
    });

    // Fetch (AND UPDATE HTML)
    function fetchDataset(dataset, lang) {
      resultEl.find('.code').removeClass('language-' + (userLang == 'json' ? 'javascript' : userLang))

      // Store last requested dataset + lang
      userDataset = dataset;
      userLang = lang;

      // Fetch it!
      var url = '//' + location.host + '/datasets/' + dataset + '?lang=' + lang;
      showLoadingIndicator();
      $.getJSON(url, function(json) {
        updateDatasetHTML(json);
      }).fail(function() {
        hideLoadingIndicator();
        resultEl.find('.message').html('ERROR: Unable to fetch dataset');
        resultEl.find('.code').html('');
      });
    }

    // Update HTML based on given JSON response
    function updateDatasetHTML(json) {
      resultEl.find('.message').html('');
      resultEl.find('.code').addClass('language-' + (userLang == 'json' ? 'javascript' : userLang)).html(json.data);

      // Don't syntax highlight on mobile - it's too slow, esp. for the large currency dataset (heck, it's even slow on desktop)
      if( !isMobile()) {
        // Re-run code highlighting
        Prism.highlightElement(resultEl.find('.code').get(0), true, function () {
          hideLoadingIndicator();
        });
      }
    }

    // Loading indicator
    function showLoadingIndicator() {
      hideSelectButton();
      resultEl.append('<div class="loadingIndicator">Loading...</div>');
    }
    function hideLoadingIndicator() {
      resultEl.find('.loadingIndicator').remove();
      showSelectButton();
    }

    // Code select all code
    function showSelectButton() {
      resultEl.append('<a class="btn btn-primary selectCode">Select All</a>');
    }
    function hideSelectButton() {
      resultEl.find('.selectCode').remove();
    }

    // Event delegation assuming the select button is going to be there
    resultEl.on('click', '.selectCode', function (event) {
      SelectText(resultEl.find('.code').get(0));
    });

